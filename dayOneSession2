#file system 

#commands

ls 
#current date
pwd
#change directory
cd
#display file
cat
#system call

#check the suer
whoami

strace ls

#group add 
#to add the user geek to the group sudo , use the following command:
usermod -a -G sudo geek

-rw------- 1 parallels parallels   77 Jul 30 14:03 nohup.out
-rw-rw-r-- 1 parallels parallels    0 Jul 30 14:04 login


$ sudo usermod -a -G geekgroup geek

$ sudo chown parallels:geekgroup login
$ls -ltr
-rw------- 1 parallels parallels   77 Jul 30 14:03 nohup.out
-rw-rw-r-- 1 parallels geekgroup    7 Jul 30 14:58 login

$ usermod -a -G geekgroup geek
usermod: Permission denied.
usermod: cannot lock /etc/passwd; try again later.

$ sudo usermod -a -G geekgroup geek
$ su geek
Password: 
$ bash
geek@k8s-worker-node1:/home/parallels$ vim login




#Check init process is the parent of all process
ps -ef
#check for process id 1
#find other process having PPID 1

#Edit .bashrc and run commands on new terminal session 
#Run below two commands

sudo vim .bashrc


#Adding Users

useradd test
#set the password

passwd test 
touch /home/parallels/login

#print environment variable 

#.profile file 
#update path in .profile file

#create a new user

open /home/newuser/.profile

Add a command and then restart and login to the newuser


#it all depends on with which user you're trying to log in. 
#The global /etc/profile file is loaded for every user, while the ~/.profile is only loaded for the user.

sudo vim .profile
#And add some command
restart the system 
#then check command output 

#When you open a terminal emulator (gnome-terminal for example), you are executing what is known as an interactive, non-login shell.

#When you log into your machine from the command line, or run a command such as su - username, you are running an interactive login shell.

#When you log in graphically, you are running something completely different. The details will depend on your system and graphical environment but in general, it is the graphical shell that deals with your login. While many graphical shells (including the Ubuntu default) will read /etc/profile and ~/.profile not all of them do.

#Finally, when you run a shell script, it is run in a non-interactive, non-login shell.

The SSH daemon, via the pam_motd module of the PAM library, displays the contents of /etc/motd. Via the pam_env module, it sets the environment variables from /etc/environment and ~/.pam_environment.
#A login shell is started, and the following files are read in order:
#/etc/profile
#/etc/bash.bashrc (the default Ubuntu /etc/profile sources /etc/bash.bashrc).
#~/.bash_profile. The other files that could have been read here (~/.profile and ~/.bash_login) are ignored because ~/.bash_profile exists.

login via ssh 
both .profile and .bashrc will run 


#File System
df -lh
fdisk -l


#File and Directory Permissions & ownership (Umask)

#File permission 

#File permission (defaults) depends on umask
#The default umask 002 used for normal user. With this mask default directory permissions are 775 and default file permissions are 664.

root@a3363f98c89b:/# umask 002
root@a3363f98c89b:/# 
root@a3363f98c89b:/# 
root@a3363f98c89b:/# touch d.sh
root@a3363f98c89b:/# ls -ltr
total 64

-rw-rw-r--   1 root root    0 Jul 28 19:23 d.sh

#if umask 000 then default directory permission 777 and then file permission 666
#trick 6-0 6-0 6-0 for file and 7-0 7-0 7-0 for directory 

root@a3363f98c89b:/# umask 000
root@a3363f98c89b:/# touch e.sh
root@a3363f98c89b:/# ls -ltr
total 64
drwxr-xr-x   8 root root 4096 May 23  2017 lib
drwxr-xr-x   2 root root 4096 Apr 24  2018 home

-rw-rw-r--   1 root root    0 Jul 28 19:23 d.sh
-rw-rw-rw-   1 root root    0 Jul 28 19:25 e.sh

root@a3363f98c89b:/# mkdir test
root@a3363f98c89b:/# ls -ltr
total 68

-rw-rw-rw-   1 root root    0 Jul 28 19:25 e.sh
drwxrwxrwx   2 root root 4096 Jul 28 19:25 test




 

